syntax = "proto3";

package control_grpc;
option go_package = "control_grpc/proto";

service RemoteControlService {
  rpc GetFeed (stream FeedRequest) returns (stream FeedResponse);
  rpc Ping(PingRequest) returns (PingResponse);
}

service TerminalService {
  rpc CommandStream(stream TerminalRequest) returns (stream TerminalResponse);
}

message MouseMovePoint {
  int32 x = 1;
  int32 y = 2;
  // int64 timestamp_offset_nano = 3;
}

message FeedRequest {
  bool success = 1;
  string message = 2;
  int32 clientWidth = 3;
  int32 clientHeight = 4;
  int64 timestamp = 9;

  int32 mouseX = 5;
  int32 mouseY = 6;
  string mouseBtn = 7;
  string mouseEventType = 8;

  string keyboard_event_type = 10;
  string key_name = 11;
  string key_char_str = 12;

  bool modifier_shift = 13;
  bool modifier_ctrl = 14;
  bool modifier_alt = 15;
  bool modifier_super = 16;
  float scrollX = 17;
  float scrollY = 18;

  // New field for batched mouse moves
  repeated MouseMovePoint batched_mouse_moves = 19;
}


message FeedResponse {
  bytes data = 1;
  int32 frameNumber = 2;
  int64 timestamp = 3;
  string contentType = 4;
  string hwAccel = 5;
  string error_message = 6;
}

message PingRequest {
  int64 client_timestamp_nano = 1;
}

message PingResponse {
  int64 client_timestamp_nano = 1;
}

message TerminalRequest {
  string session_id = 1;
  string command = 2;
  // bool stop_session = 3; // For future use, to signal closing the terminal
}

message TerminalResponse {
  string session_id = 1;
  enum OutputType {
    STDOUT = 0;
    STDERR = 1;
    SYSTEM_MESSAGE = 2; // For messages from the terminal service itself (e.g., command ended)
    ERROR_MESSAGE = 3;  // For errors from the terminal service itself
  }
  OutputType output_type = 2;
  string output_line = 3;
  bool command_ended = 4; // True if this message signifies the end of the current command's output
}
